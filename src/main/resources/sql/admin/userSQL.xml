<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eosa.admin.mapper.UserMapper">

    <!-- 회원 목록 개수 조회 -->
    <select id="countUsersList" resultType="int" parameterType="hashmap">
        SELECT COUNT(*)
        FROM Users U
        WHERE U.usersDelete = 0
          AND U.usersRole = #{usersRole}
        <if test="id != null">
            AND CONCAT(U.usersAccount) REGEXP #{search}
        </if>
        <if test="name != null">
            AND CONCAT(U.usersName) REGEXP #{search}
        </if>
        <if test="phone != null">
            AND CONCAT(U.usersPhone) REGEXP #{search}
        </if>
    </select>

    <!-- 회원 목록 조회 -->
    <select id="selectUsersList" resultType="UsersDTO" parameterType="hashmap">
        SELECT U.usersIdx,
               U.usersAccount,
               U.usersName,
               U.usersNick,
               U.usersPhone,
               U.usersEmail,
               U.usersAge,
               U.usersRegion1,
               U.usersGender,
               U.usersJoinDate
        FROM Users U
        WHERE U.usersDelete = 0
          AND U.usersRole = #{usersRole}
        <if test="id != null">
            AND CONCAT(U.usersAccount) REGEXP #{search}
        </if>
        <if test="name != null">
            AND CONCAT(U.usersName) REGEXP #{search}
        </if>
        <if test="phone != null">
            AND CONCAT(U.usersPhone) REGEXP #{search}
        </if>
        ORDER BY U.usersJoinDate DESC LIMIT #{startIndex}, #{pageSize}
    </select>

    <!-- 회원 상세 조회 -->
    <select id="selectUsersDetails" resultType="UsersTerminateDTO">
        SELECT U.usersIdx,
               U.usersAccount,
               U.usersName,
               U.usersNick,
               U.usersPhone,
               U.usersEmail,
               U.usersRole,
               U.usersAge,
               U.usersRegion1,
               U.usersGender,
               U.usersJoinDate,
               U.usersNotice,
               U.usersDelete,
               T.terminateReason,
               T.terminateRequestDate,
               DATE_ADD(T.terminateRequestDate, INTERVAL -30 DAY) terminateCreateDate
        FROM Users U
                 LEFT OUTER JOIN TerminateUser T on U.usersIdx = T.usersIdx
        WHERE U.usersIdx = #{usersIdx}
    </select>

    <!-- 회원 수정 -->
    <update id="updateUsers" parameterType="UsersDTO">
        UPDATE Users
        SET usersName    = #{usersName},
            usersNick    = #{usersNick},
            usersPhone   = #{usersPhone},
            usersEmail   = #{usersEmail},
            usersAge     = #{usersAge},
            usersRegion1 = #{usersRegion1},
            usersGender  = #{usersGender}
        WHERE usersIdx = #{usersIdx}
    </update>


    <!-- 탈퇴 회원 목록 개수 조회 -->
    <select id="countTerminateList" resultType="int" parameterType="hashmap">
        SELECT COUNT(*)
        FROM Users U
        WHERE U.usersDelete = 1
        AND U.usersRole != 'ADMIN'
        <if test="id != null">
            AND CONCAT(U.usersAccount) REGEXP #{search}
        </if>
        <if test="name != null">
            AND CONCAT(U.usersName) REGEXP #{search}
        </if>
        <if test="phone != null">
            AND CONCAT(U.usersPhone) REGEXP #{search}
        </if>
    </select>

    <!-- 탈퇴 회원 목록 조회 -->
    <select id="selectTerminateList" resultType="UsersTerminateDTO" parameterType="hashmap">
        SELECT U.usersIdx,
               U.usersAccount,
               U.usersName,
               U.usersNick,
               U.usersPhone,
               U.usersEmail,
               U.usersRole,
               U.usersAge,
               U.usersRegion1,
               U.usersGender,
               U.usersJoinDate,
               T.terminateRequestDate,
               DATE_ADD(T.terminateRequestDate, INTERVAL -30 DAY) terminateCreateDate
        FROM Users U
                LEFT JOIN TerminateUser T ON U.usersIdx = T.usersIdx
        WHERE U.usersDelete = 1
        AND U.usersRole != 'ADMIN'
        <if test="id != null">
            AND CONCAT(U.usersAccount) REGEXP #{search}
        </if>
        <if test="name != null">
            AND CONCAT(U.usersName) REGEXP #{search}
        </if>
        <if test="phone != null">
            AND CONCAT(U.usersPhone) REGEXP #{search}
        </if>
        ORDER BY T.terminateRequestDate DESC LIMIT #{startIndex}, #{pageSize}
    </select>

    <!-- 회원 탈퇴 상태 변경 -->
    <update id="updateUsersTerminate" parameterType="UsersDTO">
        UPDATE Users
        SET usersEnabled = #{usersEnabled},
            usersDelete = #{usersDelete}
        WHERE usersIdx = #{usersIdx}
    </update>

    <!-- 회원 탈퇴 -->
    <insert id="insertTerminate" parameterType="UsersTerminateDTO">
        INSERT INTO TerminateUser (usersIdx,
                                   terminateReason,
                                   terminateRequestDate)
        VALUES (#{usersIdx},
                #{terminateReason},
                (DATE_FORMAT(NOW(), '%Y-%m-%d') + INTERVAL 30 DAY))
    </insert>

    <!-- 회원 탈퇴 취소 -->
    <delete id="deleteTerminate" parameterType="long">
        DELETE
        FROM TerminateUser
        WHERE usersIdx = #{usersIdx}
    </delete>

    <!-- 회원 삭제 -->
    <delete id="deleteUsers" parameterType="long">
        DELETE
        FROM Users
        WHERE usersIdx = #{usersIdx}
    </delete>

    <!-- 비회원 목록 개수 조회 -->
    <select id="countTempList" resultType="int" parameterType="hashmap">
        SELECT COUNT(*)
        FROM Users U
        WHERE U.usersRole = 'TEMP'
        <if test="sort != null">
            AND CONCAT(U.usersEmail) REGEXP #{search}
        </if>
    </select>

    <!-- 비회원 목록 조회 -->
    <select id="selectTempList" resultType="UsersDTO" parameterType="hashmap">
        SELECT U.usersIdx,
               U.usersEmail,
               U.usersAge,
               U.usersRegion1,
               U.usersGender,
               U.usersJoinDate
        FROM Users U
        WHERE U.usersRole = 'TEMP'
        <if test="sort != null">
            AND CONCAT(U.usersEmail) REGEXP #{search}
        </if>
        ORDER BY U.usersJoinDate DESC LIMIT #{startIndex}, #{pageSize}
    </select>

    <!-- 비회원 삭제 -->
    <delete id="deleteTemp">
        DELETE
        FROM Users U
        WHERE U.usersIdx IN
        <foreach collection="array" item="arr" index="i" open="(" separator="," close=")">
            #{arr}
        </foreach>
    </delete>

    <!-- 회원 등록 -->
    <insert id="insertUsers" parameterType="UsersDTO">
        INSERT INTO Users (usersAccount,
                           usersPass,
                           usersName,
                           usersNick,
                           usersPhone,
                           usersEmail,
                           usersRole,
                           usersAge,
                           usersRegion1,
                           usersGender,
                           usersJoinDate,
                           usersNotice,
                           usersEnabled,
                           usersDelete)
        VALUES (#{usersAccount},
                #{usersPass},
                #{usersName},
                #{usersNick},
                #{usersPhone},
                #{usersEmail},
                #{usersRole},
                #{usersAge},
                #{usersRegion1},
                #{usersGender},
                NOW(),
                0,
                1,
                0)
    </insert>

</mapper>
