def getDate() {
//	def date = new Date()
//	def formattedDate = date.format("yyyyMMddHHmmss")
//	return formattedDate
	new Date().format("yyyyMMdd")
}

plugins {
	id 'org.springframework.boot' version '2.7.1-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'com.eosa'
version = '0.8.09291429'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-mail:2.7.2'
	implementation 'io.springfox:springfox-boot-starter:3.0.0'

	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.webjars:sockjs-client:1.1.2'
	implementation 'org.webjars:stomp-websocket:2.3.3-1'

	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf:2.7.0'
	implementation 'org.webjars.npm:bootstrap:5.2.0'
	implementation 'org.webjars.bower:vue:2.5.16'
	implementation 'org.webjars.bower:axios:0.17.1'
	implementation 'com.google.code.gson:gson:2.9.0'

	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'com.auth0:java-jwt:4.0.0'

	implementation 'org.springframework.boot:spring-boot-starter-data-redis:2.7.3'
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
	implementation 'net.nurigo:sdk:4.2.4'

	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	compileOnly 'org.projectlombok:lombok'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	runtimeOnly 'mysql:mysql-connector-java'

	implementation 'org.springframework.boot:spring-boot-configuration-processor'
	// annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// mybatis
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.2'
	// log4j2
	implementation group: 'org.bgee.log4jdbc-log4j2', name:'log4jdbc-log4j2-jdbc4.1', version: '1.16'
	// 타임리프 레이아웃
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'
	// json
	implementation 'org.json:json:20220320'

}

tasks.named('test') {
	useJUnitPlatform()
}

// // Intergration Springboot & React
// def UI = "$projectDir/src/main/ui"

// sourceSets {
// 	main {
// 		resources { srcDirs = ["$projectDir/src/main/resources"]
// 		}
// 	}
// }

// processResources { dependsOn "copyReactBuildFiles" }

// task installReact(type: Exec) {
// 	workingDir "$UI"
// 	inputs.dir "$UI"
// 	group = BasePlugin.BUILD_GROUP
// 	if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
// 		commandLine "npm.cmd", "audit", "fix"
// 		commandLine 'npm.cmd', 'install' }
// 	else {
// 		commandLine "npm", "audit", "fix" commandLine 'npm', 'install'
// 	}
// }

// task buildReact(type: Exec) {
// 	dependsOn "installReact"
// 	workingDir "$UI"
// 	inputs.dir "$UI"
// 	group = BasePlugin.BUILD_GROUP
// 	if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
// 		commandLine "npm.cmd", "run-script", "build"
// 	} else {
// 		commandLine "npm", "run-script", "build"
// 	}
// }

// task copyReactBuildFiles(type: Copy) {
// 	dependsOn "buildReact"
// 	from "$UI/build"
// 	into "$projectDir/src/main/resources/static"
// }
